#!/usr/bin/env bash
################################################################################################################
# Date: November 1,2016
# Last update: March 10, 2016
# Corresponding Author: Samet Keserci samet@nete.com
# Authors: Lingtian Wan, Samet Keserci, Shixin Jiang
# This script was generated by NETE staff. Any derivative use should acknowledge the original source
# Caveat emptor- no warranties are provided, explicit or implicit
# This script was developed to CentOS OS provisioned through Azure
###############################################################################################################

# This script is the FIRST part of the whole script.
# How to run:

#  To review the log file and possible failures, re-run in this order and save the log file and compare.


# Baseline Configuration items: 1-100.


echo 'Row_2. Section Header: Install Updates, Patches and Additional Security Software'
printf "\n\n"


echo 'row_3. 1.1 Use the Latest OS Release'
echo 'uname -r'
uname -r
echo 'cat /etc/centos-release : Manual Check Please'
cat /etc/centos-release
printf "\n\n"


echo 'row_4. Section Header: Filesystem Configuration'
printf "\n\n"


echo 'row_5. 1.1.1 Create separate partition for /tmp'
echo 'Verify that there is a /tmp file partition in the /etc/fstab file'
if [ "$(grep "[[:space:]]/tmp[[:space:]]" /etc/fstab)" != "" ]; then
   echo "CHECK IS SUCCESSFUL";
else
  dd if=/dev/zero of=/tmp/tmp_fs seek=512 count=512 bs=1M

  mkfs.ext3 -q /tmp/tmp_fs

  echo '/tmp/tmp_fs /tmp ext3 noexec,nosuid,nodev,loop 1 1' >> /etc/fstab

  mount /tmp
fi
printf "\n\n"


echo 'row_6. 1.1.2 Set nodev option for /tmp Partition'
if [ "$(grep /tmp /etc/fstab |grep nodev)" != "" ];
  then     echo "CHECK IS SUCCESSFUL";
else
  echo "CHECK IS FAILED, SHOULD SET MANUALLY!"
fi
printf "\n\n"


echo 'row_7. 1.1.3 Set nosuid option for /tmp Partition'
if [ "$(grep /tmp /etc/fstab |grep nosuid)" != "" ];
  then     echo "CHECK IS SUCCESSFUL";
else
  echo "CHECK IS FAILED, SHOULD SET MANUALLY!"
fi
printf "\n\n"


echo 'row_8. 1.1.4 Set noexec option for /tmp Partition'
if [ "$(grep /tmp /etc/fstab |grep nosuid)" != "" ];
  then     echo "CHECK IS SUCCESSFUL";
else
  echo "CHECK IS FAILED, SHOULD SET MANUALLY!"
fi
printf "\n\n"

# Row 9 to 13 to 20 are required investigation.

echo 'row_21 1.1.17 Set Sticky Bit on All world-writable directories'
echo 'NOT RECOMENDED FOR DEV ENVIRONMENT'



echo "row_22 Section Header: Configure Software Updates"
printf "\n\n"


echo "row_23 1.2.1 Verify CentOS GPG Key is Installed"
echo "___CHECK___"
rpm -q --queryformat "%{SUMMARY}\n" gpg-pubkey
a=$(rpm -q --queryformat "%{SUMMARY}\n" gpg-pubkey)
b='gpg(CentOS-7 Key (CentOS 7 Official Signing Key) <security@centos.org>) gpg(OpenLogic Inc (OpenLogic RPM Development) <support@openlogic.com>)'
if [[ "$(echo $a)" == *"$b"* ]]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  gpg --quiet --with-fingerprint /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7
fi
printf "\n\n"


echo "row_24 1.2.2 Verify that gpgcheck is Globally Activated"
echo "___CHECK___"
grep gpgcheck /etc/yum.conf
if [ "$(grep gpgcheck /etc/yum.conf)" = "gpgcheck=1" ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  sed -i '/gpgcheck=/d' /etc/yum.conf
  echo "gpgcheck=1" >> /etc/yum.conf
fi
printf "\n\n"


echo "row_25 1.2.3 Obtain Software Package Updates with yum"
echo "___CHECK___"
yum check-update
a=$(yum check-update | wc -l)
if [ "$a" -le 2 ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  yum -y update
fi
printf "\n\n"


echo "row_26 1.2.4 Verify Package Integrity Using RPM"
echo "___CHECK___"
rpm -qVa | awk '$2 != "c" { print $0}'
a=$(rpm -qVa | awk '$2 != "c" { print $0}' | wc -l)
if [ "$a" -eq 0 ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  echo "NEEDS MANUAL INSPECTION"
fi
printf "\n\n"


echo "row_27 Section Header: Advanced Intrusion Detection Environment (AIDE)"
printf "\n\n"


echo "row_28 Section Header: Configure SELinux"
printf "\n\n"


echo "row_29 Section Header: Secure Boot Settings"
printf "\n\n"


echo "row_30 1.5.1 Set User/Group Owner on /etc/grub.conf"
echo "___CHECK___"
stat -L -c "%u %g" /etc/grub.conf | egrep "0 0"
a=$(stat -L -c "%u %g" /etc/grub.conf | egrep "0 0" | wc -l)
if [ "$a" -eq 0 ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  chown root:root /etc/grub.conf
fi
printf "\n\n"


echo "row_31 1.5.2 Set Permissions on /etc/grub.conf"
echo "___CHECK___"
stat -L -c "%a" /etc/grub.conf | egrep ".00"
a=$(stat -L -c "%a" /etc/grub.conf | egrep ".00" | wc -l)
if [ "$a" -eq 0 ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  chmod og-rwx /etc/grub.conf
fi
printf "\n\n"


echo "row_32 1.5.3 Set Boot Loader Password"
echo "___CHECK___"
grep "^password" /etc/grub.conf
a=$(grep "^password" /etc/grub.conf)
if [ "$a" == 'password --md5' ] || [ -z "$a" ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  sed -i '/^password/d' /etc/grub.conf
  echo "password --md5 _[Encrypted Password]_" >> /etc/grub.conf
fi
printf "\n\n"


echo "row_33 1.5.4 Require Authentication for Single-User Mode"
echo "___CHECK 1/2___"
grep SINGLE /etc/sysconfig/init
if [ "$(grep SINGLE /etc/sysconfig/init)" == 'SINGLE=/sbin/sulogin' ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  sed -i "/SINGLE/s/sushell/sulogin/" /etc/sysconfig/init
fi
echo "___CHECK 2/2___"
grep "PROMPT" /etc/sysconfig/init
if [ "$(grep PROMPT /etc/sysconfig/init)" == 'PROMPT=no' ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  sed -i "/PROMPT/s/yes/no/" /etc/sysconfig/init
fi
printf "\n\n"


echo "row_34 1.5.5 Disable Interactive Boot"
echo "___CHECK___"
grep "^PROMPT" /etc/sysconfig/init
if [ "$(grep "^PROMPT" /etc/sysconfig/init)" == 'PROMPT=no' ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  sed -i "/PROMPT/s/yes/no/" /etc/sysconfig/init
fi
printf "\n\n"


echo "row_35 Section Header: Additional Process Hardening"
printf "\n\n"


echo "row_36 1.6.1	Restrict Core Dumps"
echo "____CHECK 1/2____"
grep "hard core" /etc/security/limits.conf
if [ "$(grep "hard core" /etc/security/limits.conf)" = "* hard core 0" ];
  then     echo "CHECK IS SUCCESSFUL";
else
  echo "CHECK IS FAILED, SET IS IN ACTION "
  echo "____SET____"
  sed -i '/* hard core/d' /etc/security/limits.conf
  echo "* hard core 0" >> /etc/security/limits.conf
fi
echo "____CHECK 2/2____"
sysctl fs.suid_dumpable
if [ "$(sysctl fs.suid_dumpable)" = "fs.suid_dumpable = 0" ];
  then    echo "CHECK IS SUCCESSFUL";
else
  echo "CHECK IS FAILED, SET IS IN ACTION "
  echo "____SET____"
  sed -i '/fs.suid_dumpable = 0/d' /etc/sysctl.conf
  echo "fs.suid_dumpable = 0" >> /etc/sysctl.conf
fi
printf "\n\n"


echo "row_37 1.6.2	Configure ExecShield"
echo "____CHECK____"
sysctl kernel.exec-shield
if [ "$(sysctl kernel.exec-shield)" = "kernel.exec-shield = 1" ];
  then     echo "CHECK IS SUCCESSFUL";
else
  echo "CHECK IS FAILED, SET IS IN ACTION "
  echo "____SET____"
  sed -i '/kernel.exec-shield =/d' /etc/security/limits.conf
  echo "kernel.exec-shield = 1" >> /etc/security/limits.conf
  echo "COMMENT(added by Samet K.): Exec-shield is no longer an option in sysctl for kernel tuning in CENTOS7, it is by default on.
This is a security measure, as documented in the RHEL 7 Security Guide.
http://centosfaq.org/centos/execshield-in-c6-or-c7-kernels/"
fi
printf "\n\n"

echo "row_38 1.6.3	Enable Randomized Virtual Memory Region Placement"
echo "____CHECK____"
sysctl kernel.randomize_va_space
if [ "$(sysctl kernel.randomize_va_space)" = "kernel.randomize_va_space = 2" ];
  then     echo "CHECK IS SUCCESSFUL";
else
  echo "CHECK IS FAILED, SET IS IN ACTION "
  echo "____SET____"
  sed -i '/kernel.randomize_va_space =/d' /etc/security/limits.conf
  echo "kernel.randomize_va_space = 2" >> /etc/security/limits.conf
fi
printf "\n\n"


echo "row_39 Section Header: OS Services"
printf "\n\n"

echo "row_40 Section Header: Remove Legacy Services"
printf "\n\n"


echo "row_41 2.1.1 Remove telnet-server"
echo "___CHECK___"
rpm -q telnet-server
if [ "$(rpm -q telnet-server)" = "package telnet-server is not installed" ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  yum erase telnet-server
fi
printf "\n\n"


echo "row_42 2.1.2 Remove telnet Clients"
echo "___CHECK___"
rpm -q telnet
if [ "$(rpm -q telnet)" = "package telnet is not installed" ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  yum erase telnet
fi
printf "\n\n"


echo "row_43 2.1.3 Remove rsh-server"
echo "___CHECK___"
rpm -q rsh-server
if [ "$(rpm -q rsh-server)" = "package rsh-server is not installed" ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  yum erase rsh-server
fi
printf "\n\n"


echo "row_44 2.1.4 Remove rsh"
echo "___CHECK___"
rpm -q rsh
if [ "$(rpm -q rsh)" = "package rsh is not installed" ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  yum erase rsh
fi
printf "\n\n"


echo "row_45 2.1.5 Remove NIS Client"
echo "___CHECK___"
rpm -q ypbind
if [ "$(rpm -q ypbind)" = "package ypbind is not installed" ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  yum erase ypbind
fi
printf "\n\n"


echo "row_46 2.1.6 Remove NIS Server"
echo "___CHECK___"
rpm -q ypserv
if [ "$(rpm -q ypserv)" = "package ypserv is not installed" ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  yum erase ypserv
fi
printf "\n\n"


echo "row_47 2.1.7 Remove tftp"
echo "___CHECK___"
rpm -q tftp
if [ "$(rpm -q tftp)" = "package tftp is not installed" ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  yum erase tftp
fi
printf "\n\n"


echo "row_48 2.1.8 Remove tftp-server"
echo "___CHECK___"
rpm -q tftp-server
if [ "$(rpm -q tftp-server)" = "package tftp-server is not installed" ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  yum erase tftp-server
fi
printf "\n\n"


echo "row_49 2.1.9 Remove talk"
echo "___CHECK___"
rpm -q talk
if [ "$(rpm -q talk)" = "package talk is not installed" ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  yum erase talk
fi
printf "\n\n"


echo "row_50 2.1.10 Remove talk-server"
echo "___CHECK___"
rpm -q talk-server
if [ "$(rpm -q talk-server)" = "package talk-server is not installed" ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  yum erase talk-server
fi
printf "\n\n"


echo "row_51 2.1.12 Disable chargen-dgram"
echo "___CHECK___"
chkconfig --list chargen-dgram
if [ "$(chkconfig --list chargen-dgram)" = "chargen-dgram: off" ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  chkconfig chargen-dgram off
fi
printf "\n\n"


echo "row_52 2.1.13 Disable chargen-stream"
echo "___CHECK___"
chkconfig --list chargen-stream
if [ "$(chkconfig --list chargen-stream)" = "chargen-stream: off" ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  chkconfig chargen-stream off
fi
printf "\n\n"


echo "row_53 2.1.14 Disable daytime-dgram"
echo "___CHECK___"
chkconfig --list daytime-dgram
if [ "$(chkconfig --list daytime-dgram)" = "daytime-dgram: off" ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  chkconfig daytime-dgram off
fi
printf "\n\n"


echo "row_54 2.1.15 Disable daytime-stream"
echo "___CHECK___"
chkconfig --list daytime-stream
if [ "$(chkconfig --list daytime-stream)" = "daytime-stream: off" ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  chkconfig daytime-stream off
fi
printf "\n\n"


echo "row_55 2.1.16 Disable echo-dgram"
echo "___CHECK___"
chkconfig --list echo-dgram
if [ "$(chkconfig --list echo-dgram)" = "echo-dgram: off" ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  chkconfig echo-dgram off
fi
printf "\n\n"


echo "row_56 2.1.17 Disable echo-stream"
echo "___CHECK___"
chkconfig --list echo-stream
if [ "$(chkconfig --list echo-stream)" = "echo-stream: off" ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  chkconfig echo-stream off
fi
printf "\n\n"


echo "row_57 2.1.18 Disable tcpmux-server"
echo "___CHECK___"
chkconfig --list tcpmux-server
if [ "$(chkconfig --list tcpmux-server)" = "tcpmux-server: off" ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  chkconfig tcpmux-server off
fi
printf "\n\n"


echo "row_58 Section Header: Special Purpose Services"
printf "\n\n"


echo "row_59 3.1 Set Daemon umask"
echo "___CHECK___"
grep umask /etc/sysconfig/init
if [ "$(grep umask /etc/sysconfig/init)" = "umask 027" ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  echo "umask 027" >> /etc/sysconfig/init
fi
printf "\n\n"


echo "row_60 3.2 Remove X Windows"
echo "___CHECK 1/2___"
systemctl get-default
if [ "$(systemctl get-default)" = "multi-user.target" ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  systemctl set-default multi-user.target
fi
echo "___CHECK 2/2___"
yum grouplist | grep "X Window System"
if [ "$(yum grouplist | grep 'X Window System')" = "" ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  yum groupremove "X Window System"
fi
printf "\n\n"


echo "row_61 3.3 Disable Avahi Server"
echo "___CHECK___"
chkconfig --list avahi-daemon
if [ "$(chkconfig --list avahi-daemon)" = "avahi-daemon: 0:off 1:off 2:off 3:off 4:off 5:off 6:off" ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  sed -i '/zeroconf/d' /etc/sysconfig/network
fi
printf "\n\n"


echo "row_62 3.4 Disable Print Server - CUPS"
echo "___CHECK___"
chkconfig --list cups
if [ "$(chkconfig --list cups)" = "chkconfig: 0:off 1:off 2:off 3:off 4:off 5:off 6:off" ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  chkconfig cups off
fi
printf "\n\n"


echo "row_63 3.5 Remove DHCP Server"
echo "___CHECK___"
rpm -q dhcp
if [ "$(rpm -q dhcp)" = "package dhcp is not installed" ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  yum erase dhcp
fi
printf "\n\n"


echo "row_64 3.6 Configure Network Time Protocol (NTP)"
echo "___CHECK 1/3___"
ls /etc | grep ntp.conf
if [ "$(ls /etc | grep ntp.conf)" = "ntp.conf" ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  yum -y install ntp
fi
echo "___CHECK 2/3___"
grep 'restrict default' /etc/ntp.conf
if [ "$(grep 'restrict default' /etc/ntp.conf)" = "restrict default kod nomodify notrap nopeer noquery" ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  sed -i '/restrict default/d' /etc/ntp.conf
  echo 'restrict default kod nomodify notrap nopeer noquery' >> /etc/ntp.conf
fi
echo "___CHECK 3/3___"
grep 'restrict -6 default' /etc/ntp.conf
if [ "$(grep 'restrict -6 default' /etc/ntp.conf)" = "restrict -6 default kod nomodify notrap nopeer noquery" ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  sed -i '/restrict -6 default/d' /etc/ntp.conf
  echo 'restrict -6 default kod nomodify notrap nopeer noquery' >> /etc/ntp.conf
fi
printf "\n\n"


echo "row_65 3.7 Remove LDAP"
echo "___CHECK 1/2___"
rpm -q openldap-servers
if [ "$(rpm -q openldap-servers)" = "package openldap-servers is not installed" ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  yum erase openldap-servers
fi
echo "___CHECK 2/2___"
rpm -q openldap-clients
if [ "$(rpm -q openldap-clients)" = "package openldap-clients is not installed" ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  yum erase openldap-clients
fi
printf "\n\n"


echo "row_66 3.8 Disable NFS and RPC"
echo "___CHECK 1/5___"
chkconfig --list nfslock
if [ "$(chkconfig --list nfslock)" = "nfslock: 0:off 1:off 2:off 3:off 4:off 5:off 6:off" ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  chkconfig nfslock off
fi
echo "___CHECK 2/5___"
chkconfig --list rpcgssd
if [ "$(chkconfig --list rpcgssd)" = "rpcgssd: 0:off 1:off 2:off 3:off 4:off 5:off 6:off" ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  chkconfig rpcgssd off
fi
echo "___CHECK 3/5___"
chkconfig --list rpcbind
if [ "$(chkconfig --list rpcbind)" = "rpcbind: 0:off 1:off 2:off 3:off 4:off 5:off 6:off" ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  chkconfig rpcbind off
fi
echo "___CHECK 4/5___"
chkconfig --list rpcidmapd
if [ "$(chkconfig --list rpcidmapd)" = "rpcidmapd: 0:off 1:off 2:off 3:off 4:off 5:off 6:off" ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  chkconfig rpcidmapd off
fi
echo "___CHECK 5/5___"
chkconfig --list rpcsvcgssd
if [ "$(chkconfig --list rpcsvcgssd)" = "rpcsvcgssd: 0:off 1:off 2:off 3:off 4:off 5:off 6:off" ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  chkconfig rpcsvcgssd off
fi
printf "\n\n"


echo "row_67 3.9 Remove DNS Server"
echo "___CHECK___"
rpm -q bind
if [ "$(rpm -q bind)" = "package bind is not installed" ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  yum erase bind
fi
printf "\n\n"


echo "row_68 3.10 Remove FTP Server"
echo "___CHECK___"
rpm -q vsftpd
if [ "$(rpm -q vsftpd)" = "package vsftpd is not installed" ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  yum erase vsftpd
fi
printf "\n\n"


echo "row_69 3.11 Remove HTTP Server"
echo "___CHECK___"
rpm -q httpd
if [ "$(rpm -q httpd)" = "package httpd is not installed" ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  yum erase httpd
fi
printf "\n\n"


echo "row_70 3.12 Remove Dovecot (IMAP and POP3 services)"
echo "___CHECK___"
rpm -q dovecot
if [ "$(rpm -q dovecot)" = "package dovecot is not installed" ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  yum erase dovecot
fi
printf "\n\n"


echo "row_71 3.13 Remove Samba"
echo "___CHECK___"
rpm -q samba
if [ "$(rpm -q samba)" = "package samba is not installed" ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  yum erase samba
fi
printf "\n\n"


echo "row_72 3.14 Remove HTTP Proxy Server"
echo "___CHECK___"
rpm -q squid
if [ "$(rpm -q squid)" = "package squid is not installed" ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  yum erase squid
fi
printf "\n\n"


echo "row_73 3.15 Remove SNMP Server"
echo "___CHECK___"
rpm -q net-snmp
if [ "$(rpm -q net-snmp)" = "package net-snmp is not installed" ]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  yum erase net-snmp
fi
printf "\n\n"


echo "row_74 3.16 Configure Mail Transfer Agent for Local-Only Mode"
echo "___CHECK___"
netstat -an | grep LIST | grep ":25[[:space:]]"
a=$(netstat -an | grep LIST | grep ":25[[:space:]]")
b='tcp 0 0 127.0.0.1:25 0.0.0.0:* LISTEN'
if [[ "$(echo $a)" == *"$b"* ]]; then
  echo "CHECK IS SUCCESSFUL"
else
  echo "CHECK IS FAILED, SET IS IN ACTION"
  echo "___SET___"
  sed -i '/^inet_interfaces/d' /etc/postfix/main.cf
  echo 'inet_interfaces = localhost' >> /etc/postfix/main.cf
fi
printf "\n\n"


echo "row_75 Section Header: Network Configuration and Firewalls"
printf "\n\n"

echo "row_76 4.7	Enable IPtables"
echo "____CHECK____"
chkconfig --list iptables
if [ "$(chkconfig --list iptables)" = "iptables 0:off 1:off 2:on 3:on 4:on 5:on 6:off" ];
  then     echo "CHECK IS SUCCESSFUL";
else
  echo "CHECK IS FAILED, SET IS IN ACTION "
  echo "____SET____"
  service iptables restart
  chkconfig iptables on
fi
printf "\n\n"


echo "row_77 4.8	Enable IP6tables"
echo "____CHECK____"
chkconfig --list ip6tables
if [ "$(chkconfig --list ip6tables)" = "ip6tables 0:off 1:off 2:on 3:on 4:on 5:on 6:off" ];
  then     echo "CHECK IS SUCCESSFUL";
else
  echo "CHECK IS FAILED, SET IS IN ACTION "
  echo "____SET____"
  service ip6tables restart
  chkconfig ip6tables on
fi
printf "\n\n"

echo "row_78 Section Header: Modify Network Parameters (Host Only)"
printf "\n\n"


echo "row_79 4.1.1	Disable IP Forwarding"
echo "____CHECK____"
/sbin/sysctl net.ipv4.ip_forward
if [ "$(/sbin/sysctl net.ipv4.ip_forward)" = "net.ipv4.ip_forward = 0" ];
  then     echo "CHECK IS SUCCESSFUL";
else
  echo "CHECK IS FAILED, SET IS IN ACTION "
  echo "____SET____"
  sed -i '/net.ipv4.ip_forward =/d' /etc/sysctl.conf
  echo "net.ipv4.ip_forward = 0" >> /etc/sysctl.conf
  /sbin/sysctl -w net.ipv4.ip_forward=0
  /sbin/sysctl -w net.ipv4.route.flush=1
fi
printf "\n\n"


echo "row_80 4.1.2	Disable Send Packet Redirects"
echo "____CHECK 1/2____"
/sbin/sysctl net.ipv4.conf.all.send_redirects
if [ "$(/sbin/sysctl net.ipv4.conf.all.send_redirects)" = "net.ipv4.conf.all.send_redirects = 0" ];
  then     echo "CHECK IS SUCCESSFUL";
else
  echo "CHECK IS FAILED, SET IS IN ACTION "
  echo "____SET____"
  sed -i '/net.ipv4.conf.all.send_redirects =/d' /etc/sysctl.conf
  echo "net.ipv4.conf.all.send_redirects = 0" >> /etc/sysctl.conf
  /sbin/sysctl -w net.ipv4.conf.all.send_redirects=0
  /sbin/sysctl -w net.ipv4.route.flush=1
fi
echo "____CHECK 2/2____"
/sbin/sysctl net.ipv4.conf.default.send_redirects
if [ "$(/sbin/sysctl net.ipv4.conf.default.send_redirects)" = "net.ipv4.conf.default.send_redirects = 0" ];
  then    echo "CHECK IS SUCCESSFUL";
else
  echo "CHECK IS FAILED, SET IS IN ACTION "
  echo "____SET____"
  sed -i '/net.ipv4.conf.default.send_redirects =/d' /etc/sysctl.conf
  echo "net.ipv4.conf.default.send_redirects = 0" >> /etc/sysctl.conf
  /sbin/sysctl -w net.ipv4.conf.default.send_redirects=0
  /sbin/sysctl -w net.ipv4.route.flush=1
fi
printf "\n\n"


echo "row_81 Section Header: Modify Network Parameters (Host and Router)"
printf "\n\n"




echo "row_82 4.2.1	Disable Source Routed Packet Acceptance"
echo "____CHECK 1/2____"
/sbin/sysctl net.ipv4.conf.all.accept_source_route
if [ "$(/sbin/sysctl net.ipv4.conf.all.accept_source_route)" = "net.ipv4.conf.all.accept_source_route = 0" ];
  then     echo "CHECK IS SUCCESSFUL";
else
  echo "CHECK IS FAILED, SET IS IN ACTION "
  echo "____SET____"
  sed -i '/net.ipv4.conf.all.accept_source_route =/d' /etc/sysctl.conf
  echo "net.ipv4.conf.all.accept_source_route = 0" >> /etc/sysctl.conf
  /sbin/sysctl -w net.ipv4.conf.all.accept_source_route=0
  /sbin/sysctl -w net.ipv4.route.flush=1
fi
echo "____CHECK 2/2____"
/sbin/sysctl net.ipv4.conf.default.accept_source_route
if [ "$(/sbin/sysctl net.ipv4.conf.default.accept_source_route)" = "net.ipv4.conf.default.accept_source_route = 0" ];
  then    echo "CHECK IS SUCCESSFUL";
else
  echo "CHECK IS FAILED, SET IS IN ACTION "
  echo "____SET____"
  sed -i '/net.ipv4.conf.default.accept_source_route =/d' /etc/sysctl.conf
  echo "/net.ipv4.conf.default.accept_source_route = 0" >> /etc/sysctl.conf
  /sbin/sysctl -w net.ipv4.conf.default.accept_source_route=0
  /sbin/sysctl -w net.ipv4.route.flush=1
fi
printf "\n\n"



echo "row_83 4.2.2	Disable ICMP Redirect Acceptance"
echo "____CHECK 1/2____"
/sbin/sysctl net.ipv4.conf.all.accept_redirects
if [ "$(/sbin/sysctl net.ipv4.conf.all.accept_redirects)" = "net.ipv4.conf.all.accept_redirects = 0" ];
  then     echo "CHECK IS SUCCESSFUL";
else
  echo "CHECK IS FAILED, SET IS IN ACTION "
  echo "____SET____"
  sed -i '/net.ipv4.conf.all.accept_redirects =/d' /etc/sysctl.conf
  echo "net.ipv4.conf.all.accept_redirects = 0" >> /etc/sysctl.conf
  /sbin/sysctl -w net.ipv4.conf.all.accept_redirects=0
  /sbin/sysctl -w net.ipv4.route.flush=1
fi
echo "____CHECK 2/2____"
/sbin/sysctl net.ipv4.conf.default.accept_redirects
if [ "$(/sbin/sysctl net.ipv4.conf.default.accept_redirects)" = "net.ipv4.conf.default.accept_redirects = 0" ];
  then    echo "CHECK IS SUCCESSFUL";
else
  echo "CHECK IS FAILED, SET IS IN ACTION "
  echo "____SET____"
  sed -i '/net.ipv4.conf.default.accept_redirects =/d' /etc/sysctl.conf
  echo "net.ipv4.conf.default.accept_redirects = 0" >> /etc/sysctl.conf
  /sbin/sysctl -w net.ipv4.conf.default.accept_redirects=0
  /sbin/sysctl -w net.ipv4.route.flush=1
fi
printf "\n\n"


echo "row_84 4.2.4	Log Suspicious Packets"
echo "____CHECK 1/2____"
/sbin/sysctl net.ipv4.conf.all.log_martians
if [ "$(/sbin/sysctl net.ipv4.conf.all.log_martians)" = "net.ipv4.conf.all.log_martians = 1" ];
  then     echo "CHECK IS SUCCESSFUL";
else
  echo "CHECK IS FAILED, SET IS IN ACTION "
  echo "____SET____"
  sed -i '/net.ipv4.conf.all.log_martians =/d' /etc/sysctl.conf
  echo "net.ipv4.conf.all.log_martians = 1" >> /etc/sysctl.conf
  /sbin/sysctl -w net.ipv4.conf.all.log_martians=1
  /sbin/sysctl -w net.ipv4.route.flush=1
fi
echo "____CHECK 2/2____"
/sbin/sysctl net.ipv4.conf.default.log_martians
if [ "$(/sbin/sysctl net.ipv4.conf.default.log_martians)" = "net.ipv4.conf.default.log_martians = 1" ];
  then    echo "CHECK IS SUCCESSFUL";
else
  echo "CHECK IS FAILED, SET IS IN ACTION "
  echo "____SET____"
  sed -i '/net.ipv4.conf.default.log_martians =/d' /etc/sysctl.conf
  echo "net.ipv4.conf.default.log_martians = 1" >> /etc/sysctl.conf
  /sbin/sysctl -w net.ipv4.conf.default.log_martians=1
  /sbin/sysctl -w net.ipv4.route.flush=1
fi
printf "\n\n"


echo "row_85 4.2.5	Enable Ignore Broadcast Requests"
echo "____CHECK____"
/sbin/sysctl net.ipv4.icmp_echo_ignore_broadcasts
if [ "$(/sbin/sysctl net.ipv4.icmp_echo_ignore_broadcasts)" = "net.ipv4.icmp_echo_ignore_broadcasts = 1" ];
  then    echo "CHECK IS SUCCESSFUL";
else
  echo "CHECK IS FAILED, SET IS IN ACTION "
  echo "____SET____"
  sed -i '/net.ipv4.icmp_echo_ignore_broadcasts =/d' /etc/sysctl.conf
  echo "net.ipv4.icmp_echo_ignore_broadcasts = 1" >> /etc/sysctl.conf
  /sbin/sysctl -w net.ipv4.icmp_echo_ignore_broadcasts=1
  /sbin/sysctl -w net.ipv4.route.flush=1
fi
printf "\n\n"

echo "row_86 4.2.6	Enable Bad Error Message Protection"
echo "____CHECK____"
/sbin/sysctl net.ipv4.icmp_ignore_bogus_error_responses
if [ "$(/sbin/sysctl net.ipv4.icmp_ignore_bogus_error_responses)" = "net.ipv4.icmp_ignore_bogus_error_responses = 1" ];
  then    echo "CHECK IS SUCCESSFUL";
else
  echo "CHECK IS FAILED, SET IS IN ACTION "
  echo "____SET____"
  sed -i '/net.ipv4.icmp_ignore_bogus_error_responses =/d' /etc/sysctl.conf
  echo "net.ipv4.icmp_ignore_bogus_error_responses = 1" >> /etc/sysctl.conf
  /sbin/sysctl -w net.ipv4.icmp_ignore_bogus_error_responses=1
  /sbin/sysctl -w net.ipv4.route.flush=1
fi
printf "\n\n"


echo "row_87 4.2.8	Enable TCP SYN Cookies"
echo "____CHECK____"
/sbin/sysctl net.ipv4.tcp_syncookies
if [ "$(/sbin/sysctl net.ipv4.tcp_syncookies)" = "net.ipv4.tcp_syncookies = 1" ];
  then    echo "CHECK IS SUCCESSFUL";
else
  echo "CHECK IS FAILED, SET IS IN ACTION "
  echo "____SET____"
  sed -i '/net.ipv4.tcp_syncookies =/d' /etc/sysctl.conf
  echo "net.ipv4.tcp_syncookies = 1" >> /etc/sysctl.conf
   /sbin/sysctl -w net.ipv4.tcp_syncookies=1
   /sbin/sysctl -w net.ipv4.route.flush=1
fi
printf "\n\n"


echo "row_88 Section Header: Wireless Networking"
printf "\n\n"


echo "row_89 4.3.1	Deactivate Wireless Interfaces"
echo "http://askubuntu.com/questions/405508/how-to-find-name-of-currently-active-network-interface/649763
http://www.cyberciti.biz/faq/linux-remove-wireless-networking-wifi-802-11-support-drivers/
It seems that no wirelles interface is installed.
"
printf "\n\n"


echo "row_90 Section Header: Disable IPv6"
printf "\n\n"


echo "row_91 4.4.2	Disable IPv6"
echo "NOT REQUIRED FOR NIH BASELINE CONFIGURATION"
echo "CHECK IS SUCCESSFUL"
printf "\n\n"


echo "row_92 Section Header: Configure IPv6"
printf "\n\n"



echo "row_93 4.4.1.1 Disable IPv6 Router Advertisements"
echo "NOT REQUIRED FOR NIH BASELINE CONFIGURATION"
printf "\n\n"


echo "row_94 4.4.1.2 Disable IPv6 Redirect Acceptance"
echo "____CHECK 1/2____"
/sbin/sysctl net.ipv6.conf.all.accept_redirects
if [ "$(/sbin/sysctl net.ipv6.conf.all.accept_redirects)" = "net.ipv6.conf.all.accept_redirects = 0" ];
  then     echo "CHECK IS SUCCESSFUL";
else
  echo "CHECK IS FAILED, SET IS IN ACTION "
  echo "____SET____"
  sed -i '/net.ipv6.conf.all.accept_redirects =/d' /etc/sysctl.conf
  echo "net.ipv6.conf.all.accept_redirects = 0" >> /etc/sysctl.conf
  /sbin/sysctl -w net.ipv6.conf.all.accept_redirects=0
  /sbin/sysctl -w net.ipv6.route.flush=1
fi
echo "____CHECK 2/2____"
/sbin/sysctl net.ipv6.conf.default.accept_redirects
if [ "$(/sbin/sysctl net.ipv6.conf.default.accept_redirects)" = "net.ipv6.conf.default.accept_redirects = 0" ];
  then    echo "CHECK IS SUCCESSFUL";
else
  echo "CHECK IS FAILED, SET IS IN ACTION "
  echo "____SET____"
  sed -i '/net.ipv6.conf.default.accept_redirects =/d' /etc/sysctl.conf
  echo "net.ipv6.conf.default.accept_redirects = 0" >> /etc/sysctl.conf
  /sbin/sysctl -w net.ipv6.conf.default.accept_redirects=0
  /sbin/sysctl -w net.ipv6.route.flush=1
fi
printf "\n\n"


echo "row_95 Section Header: Install TCP Wrappers"
printf "\n\n"


echo "row_96 4.4.1.2 Disable IPv6 Redirect Acceptance"
echo "____CHECK 1/2____"
ldd /sbin/sshd | grep libwrap.so
output=$(ldd /sbin/sshd | grep libwrap.so)
output_size=${#output}
if [ "$output_size" != "0" ];
  then     echo "CHECK IS SUCCESSFUL";
else
  echo "CHECK IS FAILED, SET IS IN ACTION "
  echo "____SET____"
  yum install tcp_wrappers
fi
echo "____CHECK 2/2____"
yum list tcp_wrappers | grep -w 'tcp_wrappers'
out2=$(yum list tcp_wrappers | grep -w 'tcp_wrappers')
out2_size=${#out2}
if [ "$out2_size" != "0" ];
  then    echo "CHECK IS SUCCESSFUL";
else
  echo "CHECK IS FAILED, SET IS IN ACTION "
  echo "____SET____"
  yum install tcp_wrappers
fi
printf "\n\n"


echo "row_97 4.5.2 Create /etc/hosts.allow"
echo "Requirements are met by our external Firewalls, yet we can immediately revise this part upon request."
printf "\n\n"


echo "row_98 4.5.3 Verify Permissions on /etc/hosts.allow"
echo "____CHECK____"
/bin/ls -l /etc/hosts.allow
access_priviliges_line=$(/bin/ls -l /etc/hosts.allow)
access_priviliges=${access_priviliges_line:0:10}
if [ "$access_priviliges" = "-rw-r--r--" ];
  then    echo "CHECK IS SUCCESSFUL";
else
  echo "CHECK IS FAILED, SET IS IN ACTION "
  echo "____SET____"
  echo "Access mode is changing to 644"
  /bin/chmod 644 /etc/hosts.allow
fi
printf "\n\n"


echo "row_99 4.5.2 Create /etc/hosts.deny"
echo "Requirements are met by our external Firewalls, yet we can immediately revise this part upon request."
printf "\n\n"

echo "row_100 4.5.3 Verify Permissions on /etc/hosts.deny"
echo "____CHECK____"
/bin/ls -l /etc/hosts.deny
access_priviliges_line=$(/bin/ls -l /etc/hosts.deny)
access_priviliges=${access_priviliges_line:0:10}
if [ "$access_priviliges" = "-rw-r--r--" ];
  then    echo "CHECK IS SUCCESSFUL";
else
  echo "CHECK IS FAILED, SET IS IN ACTION "
  echo "____SET____"
  echo "Access mode is changing to 644"
  /bin/chmod 644 /etc/hosts.deny

fi
printf "\n\n"
